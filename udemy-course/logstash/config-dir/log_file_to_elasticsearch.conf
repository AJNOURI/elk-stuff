input {
    file {
        path => "/mylogstash/data/*.log"
        start_position => "beginning"
    }
    http {

    }
}
filter {
    if [headers][request_uri] =~ "error" {
    	mutate {
		replace => { type => "error"  }
	}
    } else {
	mutate {
		replace => { type => "access"  }
	}
	grok {
    		match => { "message" => '%{HTTPD_COMMONLOG} "%{GREEDYDATA:referrer}" "%{GREEDYDATA:agent}"' }
    	}		
        
	if "_grokparsefailure" in [tags] {
		drop {}
	}        

    	mutate {
        	convert => {
            		"response" => "integer"
            		"bytes" => "integer"
        	}
    	}	
    	date {
        	match => ["timestamp","dd/MMM/yyyy:HH:mm:ss Z" ]
        	remove_field => [ "timestamp" ]
    	}
	geoip {
		source => "clientip"
	}
	useragent {
		source => "agent"
		target => "ua"
	}

    # Admin pages
    if [request] =~ /^\/admin\// {
        drop {}
    }

    # Crawlers
    if [ua][device] == "Spider" {
        drop {}
    }

    # Static files
    if [request] =~ /^\/js\//
        or [request] =~ /^\/css\//
        or [request] in ["/robots.txt","favicon.ico"] {
            drop {}
    }
    }	
}
    

output {
    elasticsearch {
        hosts => [ "elasticsearch:9200" ]
        document_type => "default"
        http_compression => true
    }
}
